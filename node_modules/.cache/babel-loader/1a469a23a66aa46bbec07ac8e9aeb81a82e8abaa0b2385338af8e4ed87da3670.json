{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charl\\\\OneDrive\\\\Bureau\\\\CDesport\\\\src\\\\pages\\\\LinkValorant.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LinkValorant() {\n  _s();\n  const [riotId, setRiotId] = useState(\"\");\n  const [linked, setLinked] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Simule une vérification de compte (à remplacer par une vraie API plus tard)\n  const simulateAccountCreationDate = () => {\n    // Faux exemple : retournera une date aléatoire dans les 6 derniers mois\n    const now = new Date();\n    const fakeAgeInDays = Math.floor(Math.random() * 180); // 0 à 180 jours\n    const creationDate = new Date(now);\n    creationDate.setDate(now.getDate() - fakeAgeInDays);\n    return creationDate;\n  };\n  const isAtLeast3MonthsOld = creationDate => {\n    const now = new Date();\n    const threeMonthsAgo = new Date(now.setMonth(now.getMonth() - 3));\n    return creationDate <= threeMonthsAgo;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError(\"\");\n    if (!riotId.includes(\"#\")) {\n      setError(\"❌ Format Riot ID invalide. Exemple : Charly#NA1\");\n      return;\n    }\n    const fakeCreatedAt = simulateAccountCreationDate();\n    if (!isAtLeast3MonthsOld(fakeCreatedAt)) {\n      setError(\"❌ Ton compte Riot doit avoir au moins 3 mois pour participer.\");\n      return;\n    }\n\n    // Si tout est bon\n    setLinked(true);\n    console.log(\"Compte lié : \", riotId, \"(créé le \" + fakeCreatedAt.toLocaleDateString() + \")\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-12 bg-white p-6 shadow rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-blue-700 text-center mb-6\",\n      children: \"Lier mon compte Valorant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), !linked ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Riot ID (ex: Charly#NA1)\",\n        value: riotId,\n        onChange: e => setRiotId(e.target.value),\n        className: \"w-full p-2 border rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-600 hover:bg-blue-700 text-white py-2 w-full rounded\",\n        children: \"Lier mon compte\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-green-600 font-medium\",\n      children: [\"\\u2705 Compte li\\xE9 avec succ\\xE8s : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-bold\",\n        children: riotId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(LinkValorant, \"D3VnE4nv8Uwd1culQ8R5hY4QEXg=\");\n_c = LinkValorant;\nvar _c;\n$RefreshReg$(_c, \"LinkValorant\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","LinkValorant","_s","riotId","setRiotId","linked","setLinked","error","setError","simulateAccountCreationDate","now","Date","fakeAgeInDays","Math","floor","random","creationDate","setDate","getDate","isAtLeast3MonthsOld","threeMonthsAgo","setMonth","getMonth","handleSubmit","e","preventDefault","includes","fakeCreatedAt","console","log","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Charl/OneDrive/Bureau/CDesport/src/pages/LinkValorant.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function LinkValorant() {\r\n  const [riotId, setRiotId] = useState(\"\");\r\n  const [linked, setLinked] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Simule une vérification de compte (à remplacer par une vraie API plus tard)\r\n  const simulateAccountCreationDate = () => {\r\n    // Faux exemple : retournera une date aléatoire dans les 6 derniers mois\r\n    const now = new Date();\r\n    const fakeAgeInDays = Math.floor(Math.random() * 180); // 0 à 180 jours\r\n    const creationDate = new Date(now);\r\n    creationDate.setDate(now.getDate() - fakeAgeInDays);\r\n    return creationDate;\r\n  };\r\n\r\n  const isAtLeast3MonthsOld = (creationDate) => {\r\n    const now = new Date();\r\n    const threeMonthsAgo = new Date(now.setMonth(now.getMonth() - 3));\r\n    return creationDate <= threeMonthsAgo;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    if (!riotId.includes(\"#\")) {\r\n      setError(\"❌ Format Riot ID invalide. Exemple : Charly#NA1\");\r\n      return;\r\n    }\r\n\r\n    const fakeCreatedAt = simulateAccountCreationDate();\r\n\r\n    if (!isAtLeast3MonthsOld(fakeCreatedAt)) {\r\n      setError(\"❌ Ton compte Riot doit avoir au moins 3 mois pour participer.\");\r\n      return;\r\n    }\r\n\r\n    // Si tout est bon\r\n    setLinked(true);\r\n    console.log(\"Compte lié : \", riotId, \"(créé le \" + fakeCreatedAt.toLocaleDateString() + \")\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-12 bg-white p-6 shadow rounded\">\r\n      <h1 className=\"text-2xl font-bold text-blue-700 text-center mb-6\">\r\n        Lier mon compte Valorant\r\n      </h1>\r\n\r\n      {!linked ? (\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Riot ID (ex: Charly#NA1)\"\r\n            value={riotId}\r\n            onChange={(e) => setRiotId(e.target.value)}\r\n            className=\"w-full p-2 border rounded\"\r\n            required\r\n          />\r\n          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white py-2 w-full rounded\"\r\n          >\r\n            Lier mon compte\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <div className=\"text-center text-green-600 font-medium\">\r\n          ✅ Compte lié avec succès : <br />\r\n          <span className=\"font-bold\">{riotId}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}